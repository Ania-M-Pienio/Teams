{"version":3,"sources":["components/NavBar.js","components/SideBar.js","components/Drop.js","data.js","components/TeamBox.js","components/Mess2.js","App.js","serviceWorker.js","index.js","assets/images/team_1.jpg","assets/images/lead_1.jpg","assets/images/proj_1.jpg","components/BrickWall9.jpg"],"names":["useStyles","makeStyles","theme","bar","background","boxShadow","color","grey","height","padding","borderBottom","title","flexGrow","space","border","stripe","backgroundColor","yellow","NavBar","classes","react_default","a","createElement","Fragment","CssBaseline","className","AppBar","position","Toolbar","Typography","variant","card","maxWidth","marginTop","SideBar","props","team","name","Card","CardActionArea","CardMedia","component","alt","image","Team","CardContent","gutterBottom","Box","fontWeight","fontSize","teamEmployees","length","CardActions","Button","size","Lead","teamLead","Project","teamProjects","map","proj","key","_id","root","paddingTop","display","flexDirection","formControl","paddingBottom","colour","box","minWidth","maxHeight","minHeight","search","itemText","MenuProps","PaperProps","style","ITEM_HEIGHT","width","DropList","_React$useState","React","useState","teamName","dropName","Object","slicedToArray","_React$useState3","teamId","getStyles","id","list","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","Select","multiple","value","selList","onChange","event","lastIndx","target","itemId","cloneDeep","uniqBy","item","i","itemIndx","splice","input","Input","renderValue","join","MenuItem","Checkbox","checked","DropSingle","_React$useState5","_React$useState7","Drop","Container","FormControl","InputLabel","htmlFor","single","Url","getData","what","fetch","then","response","ok","Error","statusText","json","data","emp","FirstName","LastName","sortBy","ProjectName","forEach","pname","split","pnum","parseInt","sort","b","reverse","TeamName","TeamLead","Projects","Employees","tname","tnum","save","saveData","body","method","headers","Content-Type","JSON","stringify","BOX_TITLES","appBar","borderRadius","flex","justifyContent","alignItems","barFooter","marginRight","margin","grid","flexWrap","drop","drops","barTitle","button","borderColor","button2","buttonIcon","icon","container","savings","TeamBox","_React$useState2","teams","setTeams","_React$useState4","employees","setEmployees","_React$useState6","projects","setProjects","_React$useState8","curTeam","setThisTeam","_React$useState9","_React$useState10","index","setIndex","_React$useState11","titles","_React$useState13","tempLock","useEffect","allTeams","catch","err","console","error","message","allEmployees","allProjects","handleUpdate","copyTeams","edit","onUnsaved","initSave","onSave","initResume","log","offsetParent","handleSelected","selTeam","teamNum","innerHTML","trim","_","onSelect","Grid","justify","alignContent","xs","sm","md","heading","onClick","disabled","done","IconButton","Icon_Icon","GridList","spacing","components_Drop","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","amber","iconVariant","opacity","MySnackbarContentWrapper","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","aria-label","Close_default","useStyles2","CustomizedSnackbars","open","setOpen","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","close","heroContainer","justifyItems","App","setDone","status","setStatus","setResponse","setError","setSelected","handleNeut","dist","bgImage","Wall","strength","components_TeamBox","setTimeout","onLoad","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9c14afea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  bar: {\r\n    background: \"linear-gradient(45deg, #fcfcfc 30%, #fcfcfc 90%)\",  \r\n    boxShadow: \"0 3px 5px 2px rgba(100, 104, 109, .3)\",\r\n    color: grey[800],\r\n    height:60 ,\r\n    padding: \"0 30px\",\r\n    borderBottom: '2px solid yellow[400]',\r\n  },\r\n  title: {\r\n    flexGrow: 2\r\n  },\r\n  space: {\r\n    height: 50,\r\n    border: '3px'     \r\n  },\r\n  stripe: {\r\n    height: '4px',\r\n    backgroundColor: yellow[400]\r\n  }\r\n}));\r\n\r\n\r\nfunction NavBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>  \r\n       <CssBaseline /> \r\n       <div className={classes.space}></div>   \r\n        <AppBar className={classes.bar} position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            Team Portal\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.stripe}>  </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport { NavBar };\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Team from \"../assets/images/team_1.jpg\";\r\nimport Lead from \"../assets/images/lead_1.jpg\";\r\nimport Project from \"../assets/images/proj_1.jpg\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 345,\r\n    marginTop: 30,\r\n    height: 280,\r\n  },\r\n});\r\n\r\n\r\nfunction SideBar(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"col-sm-3 col-md-2  sidebar\">\r\n\r\n\r\n    { props.team.name !== \"\" ? (\r\n      <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={Team}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\" color=\"primary\">\r\n           { props.team.name }\r\n          </Typography>\r\n          <Box fontWeight=\"fontWeightMedium\" fontSize=\"fontSize\" color=\"textSecondary\" component=\"p\">\r\n          { props.team.teamEmployees.length} people            \r\n          </Box>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card> \r\n    ) : <span></span>  }   \r\n\r\n{ props.team.name !== \"\" ? (\r\n      <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={Lead}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\" color=\"secondary\">\r\n           Team Lead\r\n          </Typography>\r\n          <Box fontWeight=\"fontWeightMedium\" fontSize=\"fontSize\" color=\"textSecondary\" component=\"p\">\r\n          { props.team.teamLead.name}            \r\n          </Box>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card> \r\n    ) : <span></span>  }  \r\n\r\n{ props.team.name !== \"\" ? (\r\n      <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={Project}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\" color=\"primary\">\r\n           Top Projects\r\n          </Typography>\r\n          {props.team.teamProjects.map( proj => {\r\n            return(\r\n                <Box key={proj._id} fontWeight=\"fontWeightMedium\" fontSize=\"fontSize\" color=\"textSecondary\" component=\"p\">\r\n                { proj.name }            \r\n                </Box>\r\n            )\r\n          })}\r\n      \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card> \r\n    ) : <span></span>  }  \r\n        \r\n    </div>\r\n  );\r\n}\r\nexport { SideBar };\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { uniqBy } from \"lodash\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: 3,\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  formControl: {\r\n    paddingTop: 20,\r\n    paddingBottom: 5,\r\n    background: \"clear\"\r\n  },\r\n  title: {\r\n    flexGrow: 2,\r\n    colour: \"black\"\r\n  },\r\n  box: {\r\n    maxWidth: 350,\r\n    minWidth: 230,\r\n    maxHeight: 50,\r\n    minHeight: 40,\r\n    fontSize: '13px',\r\n    \r\n  },\r\n  search: {\r\n    background: \"clear\"\r\n  },\r\n\r\n  itemText: {\r\n    fontSize: '14px',\r\n  },\r\n  }));\r\n\r\nconst ITEM_HEIGHT = 58;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 350,\r\n      background: \"linear-gradient(180deg, #e8e8e8 30%, #fff4ef 90%)\",\r\n      color: \"grey\",\r\n      fontSize: '12px',\r\n    }\r\n  }\r\n};\r\n\r\nfunction DropList(props) {\r\n  const [dropName] = React.useState(props.teamName);\r\n  const [teamId] = React.useState(props.teamId);\r\n\r\n  function handleMarks(event) {\r\n    // last index of the array of given selections (last added)\r\n    let lastIndx = event.target.value.length - 1;\r\n    // _id of the item/person situated at the last index (last added)\r\n    let itemId = event.target.value[lastIndx]._id;\r\n    // clone the array of selections made\r\n    let list = cloneDeep(event.target.value);\r\n    // purge duplicates\r\n    list = uniqBy(list, item => {\r\n      return item._id;\r\n    });\r\n    // check _id against originalList received\r\n    let foundIndx = props.selList\r\n      .map(i => {\r\n        return i._id;\r\n      })\r\n      .indexOf(itemId);\r\n    // if item already exists in the selList - then take it out\r\n    if (foundIndx > -1) {\r\n      //get item's new index in the selection (after unique)\r\n      let itemIndx = list\r\n        .map(i => {\r\n          return i._id;\r\n        })\r\n        .indexOf(itemId);\r\n      list.splice(itemIndx, 1);\r\n    }\r\n    props.onChange(list, dropName, teamId);\r\n  }\r\n\r\nfunction getStyles(id, list, theme) {\r\n    return {\r\n      fontWeight:\r\n        list.indexOf(id) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium\r\n    };\r\n  }\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Select\r\n      multiple\r\n      value={props.selList}\r\n      onChange={handleMarks}\r\n      input={<Input id=\"select-multiple-checkbox\" />}\r\n      renderValue={() => {\r\n        if (dropName === \"Team Members\") {\r\n          return props.selList.length + \" of \" + props.list.length;\r\n        } else {\r\n          return props.selList\r\n            .map(item => {\r\n              return item.name;\r\n            })\r\n            .join(\",  \");\r\n        }\r\n      }}\r\n      MenuProps={MenuProps}\r\n      className={classes.box}\r\n    >\r\n      {props.list.map(item => (\r\n        <MenuItem\r\n          key={item._id}\r\n          value={{\r\n            _id: item._id,\r\n            name: item.name\r\n          }}\r\n          style={getStyles(item._id, props.selList, theme)}\r\n        >\r\n          <Checkbox\r\n            checked={\r\n              props.selList\r\n                .map(i => {\r\n                  return i._id;\r\n                })\r\n                .indexOf(item._id) > -1\r\n            }\r\n          />\r\n          <span className={classes.itemText}>{item.name}</span>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction DropSingle(props) {\r\n  const [dropName] = React.useState(props.teamName);\r\n  const [teamId] = React.useState(props.teamId);\r\n\r\n  function handleMarks(event) {\r\n    props.onChange(event.target.value, dropName, teamId);\r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n    <Select\r\n      value={props.selList}\r\n      onChange={handleMarks}\r\n      input={<Input id=\"demo-controlled-open-select\" />}\r\n      renderValue={() => {\r\n        return props.selList.name;\r\n      }}\r\n      MenuProps={MenuProps}\r\n      className={classes.box}\r\n    >\r\n      {props.list.map(item => (\r\n        <MenuItem\r\n          key={item._id}\r\n          value={{\r\n            _id: item._id,\r\n            name: item.name\r\n          }}\r\n        >\r\n          <Checkbox checked={props.selList._id === item._id} />\r\n          <span className={classes.itemText}>{item.name}</span>\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nfunction Drop(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel htmlFor=\"select-multiple-checkbox\">\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n        </InputLabel>\r\n        <div>\r\n          {props.single ? (\r\n            <DropSingle\r\n              selList={props.selList}\r\n              list={props.list}\r\n              onChange={props.onChange}\r\n              teamName={props.title}\r\n              teamId={props.teamId}\r\n            ></DropSingle>\r\n          ) : (\r\n            <DropList\r\n              selList={props.selList}\r\n              list={props.list}\r\n              onChange={props.onChange}\r\n              teamName={props.title}\r\n              teamId={props.teamId}\r\n            ></DropList>\r\n          )}\r\n        </div>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Drop;\r\n","import { sortBy } from \"lodash\";\r\n\r\nconst Url = \"https://assignment-1-web422.herokuapp.com/\";\r\n\r\nconst getData = function(what) {\r\n  return fetch(Url + what)\r\n    .then(response => {\r\n      // If we don't get a 200 OK response, throw an error to the .catch()\r\n      if (!response.ok) {\r\n        throw new Error(response.statusText);\r\n      }\r\n      // Parse the response body from JSON to JS (an Array)\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      if (what === \"employees\") {\r\n        data = data.map(emp => {\r\n          return {\r\n            _id: emp._id,\r\n            name: emp.FirstName + \" \" + emp.LastName\r\n          };\r\n        });\r\n        data = sortBy(data, [\"name\", \"_id\"]);\r\n        // end of EMPLOYEES\r\n      } else if (what === \"projects\") {\r\n        data = data.map(proj => {\r\n          return {\r\n            _id: proj._id,\r\n            name: proj.ProjectName\r\n          };\r\n        });\r\n        data.forEach(proj => {\r\n          let pname = proj.name.split(\" \");\r\n          let pnum = parseInt(pname[1]);\r\n          proj.pnum = pnum;\r\n        });\r\n        data\r\n          .sort((a, b) => {\r\n            return b.pnum - a.pnum;\r\n          })\r\n          .reverse();\r\n        // end of PROJECTS\r\n      } else {\r\n        data = data.map(team => {\r\n          return {\r\n            _id: team._id,\r\n            name: team.TeamName,\r\n            teamLead: {\r\n              _id: team.TeamLead._id,\r\n              name: team.TeamLead.FirstName + \" \" + team.TeamLead.LastName\r\n            },\r\n            teamProjects: team.Projects.map(proj => {\r\n              return {\r\n                _id: proj._id,\r\n                name: proj.ProjectName\r\n              };\r\n            }),\r\n            teamEmployees: team.Employees.map(emp => {\r\n              return {\r\n                _id: emp._id,\r\n                name: emp.FirstName + \" \" + emp.LastName\r\n              };\r\n            })\r\n          };\r\n        });\r\n        data.forEach(team => {\r\n          let tname = team.name.split(\" \");\r\n          let tnum = parseInt(tname[1]);\r\n          team.tnum = tnum;\r\n          team.save = false;\r\n        });\r\n        data\r\n          .sort((a, b) => {\r\n            return b.tnum - a.tnum;\r\n          })\r\n          .reverse();\r\n      } // end of TEAMS\r\n      return data;\r\n    }); // end of then\r\n}; // end of function getData\r\n\r\nconst saveData = function(what, body) {\r\n  var URI = Url + what;\r\n  return fetch(URI, {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body)\r\n  }).then(response => {\r\n    // If we don't get a 200 OK response, throw an error to the .catch()\r\n    if (!response.ok) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    // Parse the response body from JSON to JS (an Array)\r\n    return response.json();\r\n  });\r\n}; // end of function saveData\r\nexport { getData, saveData };\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Drop from \"./Drop\";\r\nimport { AppBar } from \"@material-ui/core\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getData } from \"../data.js\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport { forEach } from \"lodash\";\r\nimport Icon from '@material-ui/core/Icon';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst BOX_TITLES = [\"Team Lead\", \"Team Members\", \"Projects\"];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    background: \"linear-gradient(45deg, #de0d80 30%, #de0d80 90%)\",\r\n    border: 0,\r\n    borderRadius: 1,\r\n    boxShadow: \"0 5px 5px 2px rgba(100, 104, 109, .3)\",\r\n    color: \"white\",\r\n    height: '60px',\r\n    padding: \"0px\",\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexGrow: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-around'\r\n  },\r\n  barFooter: {\r\n    background: \"linear-gradient(45deg, #de0d80 30%, #de0d80 90%)\",\r\n    border: 0,\r\n    borderRadius: 1,\r\n    boxShadow: \"0 5px 5px 2px rgba(100, 104, 109, .3)\",\r\n    color: \"white\",\r\n    maxHeight: 40,\r\n    padding: \"0 10px\",\r\n    flex: 3,\r\n    display: \"flex\"\r\n  },\r\n  card: {\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    background: \"linear-gradient(180deg, #f7f7f7 99%, #fcfcf2 1%)\",\r\n    marginRight: 10,\r\n    boxShadow: \"0 5px 5px 2px rgba(100, 104, 109, .3)\",\r\n    margin: '10px',\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    marginTop: 20\r\n    // position: \"absolute\"\r\n    \r\n  },\r\n  drop: {\r\n    paddingTop: 20, \r\n    flex: 5,\r\n    margin: '8px',   \r\n  },\r\n  drops: {\r\n    paddingTop: 15,\r\n    flex: 4,  \r\n  },\r\n  barTitle: {\r\n    flexGrow: 2,\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end'\r\n  },\r\n  button: {\r\n    paddingTop: 2,\r\n    paddingBottom: 0,\r\n    minWidth: 60,\r\n    color: \"#ffff00\",\r\n    fontSize: '16px',\r\n    borderColor: \"white\",\r\n    \r\n  \r\n  },\r\n  button2: {\r\n    paddingTop: 2,\r\n    paddingBottom: 0,\r\n    fontSize: '16px',\r\n    minWidth: 60,\r\n    borderColor: \"white\",\r\n\r\n  },\r\n  buttonIcon: {\r\n    paddingTop: 2,\r\n    paddingBottom: 0,\r\n  },\r\n  icon: {\r\n    paddingTop: 6,\r\n    height: '40px',\r\n    width: '40px'\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n   savings: {\r\n    paddingTop: 2,\r\n    display: \"flex\",\r\n    flexGrow: 2,\r\n    height: '60px',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-end',\r\n    paddingBottom: 9\r\n\r\n  }\r\n}));\r\n\r\nfunction TeamBox(props) {\r\n  const classes = useStyles();\r\n  const [teams, setTeams] = React.useState([]);\r\n  const [employees, setEmployees] = React.useState([]);\r\n  const [projects, setProjects] = React.useState([]);\r\n  const [curTeam, setThisTeam] = React.useState(\"\");\r\n  const [index, setIndex] = React.useState(-1);\r\n  const [titles] = React.useState(BOX_TITLES);\r\n  const [tempLock] = React.useState(false);\r\n  \r\n\r\n  React.useEffect(() => {\r\n    getData(\"teams\")\r\n      .then(allTeams => {\r\n        setTeams(allTeams);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Unable to load data\", err.message);\r\n      });\r\n\r\n    getData(\"employees\")\r\n      .then(allEmployees => {\r\n        setEmployees(allEmployees);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Unable to load data\", err.message);\r\n      });\r\n\r\n    getData(\"projects\")\r\n      .then(allProjects => {\r\n        setProjects(allProjects);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Unable to load data\", err.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleUpdate = (value, name, id) => {\r\n    setThisTeam(id);\r\n    var copyTeams = cloneDeep(teams);\r\n    var index = copyTeams\r\n      .map(i => {\r\n        return i._id;\r\n      })\r\n      .indexOf(id);\r\n    copyTeams[index].save = true;\r\n    copyTeams[index].edit = true;\r\n    // ensuring nothing else is editable while edits are occuring on one particular team\r\n    copyTeams = forEach(copyTeams, (team, i) => {\r\n      if (i !== index) {\r\n        team.save = false;\r\n      }\r\n    });\r\n    if (name === titles[1]) {\r\n      copyTeams[index].teamEmployees = cloneDeep(value);\r\n    } else if (name === titles[2]) {\r\n      copyTeams[index].teamProjects = cloneDeep(value);\r\n    } else {\r\n      copyTeams[index].teamLead = cloneDeep(value);\r\n    }\r\n    setTeams(cloneDeep(copyTeams));\r\n    setIndex(index); // team that was just edited  (for potential saving)\r\n    props.onUnsaved(); // unsaved stuff warning\r\n  };\r\n\r\n  function initSave() {\r\n    props.onSave(teams[index], curTeam);\r\n    var copyTeams = cloneDeep(teams);\r\n    copyTeams[index].save = false;\r\n    copyTeams[index].edit = false;\r\n    copyTeams = forEach(copyTeams, (team, i) => {\r\n        team.save = false;\r\n    });\r\n    setTeams(cloneDeep(copyTeams));\r\n  }\r\n\r\n  function initResume(event) {    \r\n    console.log(\"Hello initReturn\");\r\n    var id = event.target.offsetParent.id;\r\n    setThisTeam(id);\r\n    var copyTeams = cloneDeep(teams);\r\n    var index = copyTeams\r\n      .map(i => {\r\n        return i._id;\r\n      })\r\n      .indexOf(id);\r\n    setIndex(index);\r\n    copyTeams = forEach(copyTeams, (team, i) => {\r\n        if (i !== index) {\r\n          team.save = false;\r\n          \r\n        }\r\n        if (i === index) {\r\n          team.save = true;\r\n          team.edit = false;\r\n        }\r\n      });\r\n      setTeams(cloneDeep(copyTeams));    \r\n  }\r\n\r\n  function handleSelected(event) {\r\n    let teamStr = event.target.innerHTML;\r\n    let teamNum = teamStr.trim().split(\" \")[1];\r\n    let selTeam;\r\n    _.forEach(teams, (team) => {\r\n      if (team.tnum === parseInt(teamNum)) {\r\n        selTeam = team;\r\n      }      \r\n    });\r\n    props.onSelect(selTeam);\r\n  }\r\n  \r\n  return (\r\n \r\n   <Grid\r\n        container\r\n        justify=\"space-around\"\r\n        alignItems=\"stretch\"\r\n        alignContent=\"space-around\"\r\n        className={classes.grid}\r\n      >\r\n        {teams.map(team => (        \r\n          <Grid\r\n            item\r\n            key={team._id}\r\n            xs={10}\r\n            sm={8}\r\n            md={4}\r\n            className={classes.drop}\r\n          >\r\n            <Card className={classes.card}>\r\n              <div className={classes.heading}>\r\n                <AppBar className={classes.appBar} position=\"relative\">\r\n                  <Toolbar>\r\n\r\n                    <Button                      \r\n                      component=\"span\"\r\n                      color=\"inherit\"\r\n                      variant=\"outlined\"\r\n                      value={team._id}\r\n                      className={classes.button2}     \r\n                      onClick={handleSelected}              \r\n                     >  {team.name}                  \r\n                    </Button>\r\n\r\n                    <Button\r\n                      component=\"span\"\r\n                      color=\"inherit\"\r\n                      className={classes.button}\r\n                      disabled={!team.save || props.done}\r\n                      onClick={initSave}\r\n                    >\r\n                      { team.save\r\n                        ? \"SAVE \"\r\n                        : team.edit\r\n                        ? \"UNSAVED\"\r\n                        : \" \"}                        \r\n                    </Button>\r\n\r\n                    { !team.save && team.edit ?   \r\n                    <IconButton \r\n                      className={classes.button} \r\n                      color=\"inherit\" \r\n                      onClick={initResume}\r\n                      disabled = {tempLock}\r\n                      id={team._id}\r\n                      >\r\n                    <Icon \r\n                      className={classes.icon} \r\n                      fontSize=\"large\"\r\n                      \r\n                     > check_box           \r\n                    </Icon>\r\n                    </IconButton>\r\n                    : <span></span>\r\n                    }\r\n                      \r\n                  </Toolbar>\r\n                </AppBar>\r\n              </div>\r\n              <GridList spacing={1} className={classes.drops}>\r\n                <Drop\r\n                  teamId={team._id}\r\n                  className={classes.drop}\r\n                  onChange={handleUpdate}\r\n                  list={employees}\r\n                  selList={team.teamLead}\r\n                  title={titles[0]}\r\n                  single={true}\r\n                ></Drop>\r\n                <Drop\r\n                  teamId={team._id}\r\n                  className={classes.drop}\r\n                  onChange={handleUpdate}\r\n                  list={employees}\r\n                  selList={team.teamEmployees}\r\n                  title={titles[1]}\r\n                ></Drop>\r\n                <Drop\r\n                  teamId={team._id}\r\n                  className={classes.drop}\r\n                  onChange={handleUpdate}\r\n                  list={projects}\r\n                  selList={team.teamProjects}\r\n                  title={titles[2]}\r\n                ></Drop>\r\n              </GridList>\r\n\r\n              <AppBar className={classes.barFooter} position=\"relative\">\r\n                <Toolbar>\r\n                  <Typography variant=\"h6\"></Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          \r\n        ))}\r\n      </Grid>\r\n                     \r\n  ); // end of return\r\n} // end of TeamBox\r\n\r\nexport default TeamBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { amber, green } from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n  className: PropTypes.string,\r\n  message: PropTypes.node,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClose(event, reason) {\r\n    if (reason === \"clickaway\") {\r\n      setOpen(false);\r\n    }\r\n    setOpen(false);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          variant={props.variant}\r\n          className={classes.margin}\r\n          message={props.message}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </Snackbar>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./css/App.css\";\nimport {NavBar} from './components/NavBar';\nimport {SideBar} from './components/SideBar';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { AppBar } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TeamBox from \"./components/TeamBox.js\";\nimport Container from \"@material-ui/core/Container\";\nimport { cloneDeep } from \"lodash\";\nimport { saveData } from \"./data.js\";\nimport CustomizedSnackbars from \"./components/Mess2.js\";\nimport { Parallax} from \"react-parallax\";\nimport Wall from \"./components/BrickWall9.jpg\";\n\nimport grey from '@material-ui/core/colors/grey';\nimport yellow from '@material-ui/core/colors/yellow';\n\n\nconst useStyles = makeStyles(theme => ({\n  bar: {\n    background: \"linear-gradient(45deg, #fcfcfc 30%, #fcfcfc 90%)\",  \n    boxShadow: \"0 3px 5px 2px rgba(100, 104, 109, .3)\",\n    color: grey[800],\n    height:60 ,\n    padding: \"0 30px\",\n    borderBottom: '2px solid yellow[400]',\n    fontSize: '14px',\n  },\n  title: {\n    flexGrow: 2\n  },\n  heroContainer: {\n    paddingTop: 20,\n    paddingBottom: 0,\n    width: \"100%\"\n  },\n  box: {\n    display: \"flex\",\n    justifyItems: \"space-around\",\n    height: \"90%\",\n    width: \"90%\",\n    padding: '10px',\n  },\n    space: {\n    height: 30,\n    border: '3px'     \n  },\n  stripe: {\n    height: '4px',\n    backgroundColor: yellow[400]\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [done, setDone] = React.useState(false);\n  const [status, setStatus] = React.useState(1);\n  const [response, setResponse] = React.useState(\"nothing to tell you\");\n  const [error, setError] = React.useState(\"unknown\");\n  const [selTeam, setSelected] = React.useState({name:\"\", teamLead:\"\"});\n\n  const handleSave = (team, id) => { // onSave\n    team = {\n      TeamName: team.name + \"\",\n      TeamLead: team.teamLead._id,\n      Projects: cloneDeep(\n        team.teamProjects.map(proj => {\n          return proj._id;\n        })\n      ),\n      Employees: cloneDeep(\n        team.teamEmployees.map(emp => {\n          return emp._id;\n        })\n      )\n    };\n    saveData(\"team/\" + id, team)\n      .then(response => {\n        setDone(true);\n        setResponse(team.TeamName + \" updated successfully\");\n        setStatus(3); // green - success       \n        setTimeout(handleNeut, 4000);\n        console.log(response);\n      })\n      .catch(err => {\n        setDone(false);\n        setStatus(4); // red - error          \n        setError(err);\n        console.log(err);\n      });\n  };\n\n  function handleUnsaved() {\n    setStatus(2); // yellow - warning\n    \n  }\n\n  function handleLoad() {\n    setStatus(1); // blue - info    \n  }\n\n  function handleNeut() {\n    setStatus(0); // netural\n  }\n\n  function handleSelect(team) {\n    setSelected(team);\n    console.log(team);\n\n  }\n\n  return (\n    <React.Fragment>             \n    <Parallax \n      bgImage ={Wall} \n      strength={1500}\n      >\n      <div style={{ height: '10px' }} />\n      <CssBaseline />  \n  \n      <NavBar></NavBar>\n      <div className=\"container-fluid\">\n      <SideBar  team={selTeam} ></SideBar>\n \n      <Container maxWidth=\"xl\" className={classes.heroContainer}>       \n      <div className=\" col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n        <TeamBox\n          className={classes.box}\n          onSave={handleSave}\n          onUnsaved={handleUnsaved}\n          onLoad={handleLoad}\n          status={done}\n          onSelect={handleSelect}\n        >          \n        </TeamBox>\n        </div>\n     \n      </Container>\n      </div>\n      <div className={classes.space}> </div>    \n      <div className={classes.stripe}> </div>\n\n      <AppBar className={classes.bar} position=\"relative\" >\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n           Ania M. Pienio\n          </Typography>\n        </Toolbar>\n      </AppBar>\n  \n      <div>\n        {\" \"}\n        {status === 1 && (\n          <CustomizedSnackbars\n            variant={\"info\"}\n            message={\"WELCOME! Teams are ready to edit\"}\n          >\n            {\" \"}\n          </CustomizedSnackbars>\n        )}\n        {status === 2 && (\n          <CustomizedSnackbars\n            variant={\"warning\"}\n            message={\"WARNING: Do not forget to save changes.\"}\n          >\n            {\" \"}\n          </CustomizedSnackbars>\n        )}\n        {status === 3 && (\n          <CustomizedSnackbars\n            variant={\"success\"}\n            message={\"SUCCESS: \" + response}\n          >\n            {\" \"}\n          </CustomizedSnackbars>\n        )}\n        {status === 4 && (\n          <CustomizedSnackbars variant={\"error\"} message={\"ERROR: \" + error}>\n            {\" \"}\n          </CustomizedSnackbars>\n        )}\n      </div>      \n      </Parallax>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/team_1.2814da3e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lead_1.18c706d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proj_1.c5a0779d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BrickWall9.26f0c446.jpg\";"],"sourceRoot":""}